v1.0
说明：
1. 实现了基于task.json的多文件编译
2. vscode的externalConsole是cmd，修改的windowsPowershell应该是内置的默认终端
3. 将powershell和cmd的默认编码都改成了utf-8，具体修改方法如下：
    powershell: https://blog.csdn.net/qq_39494169/article/details/122561317#commentBox
    cmd: https://blog.csdn.net/qq_45796667/article/details/126107300
4. 隔壁的基于cmake编译的项目，一直在后台运行？重启后才可以重命名
5. 之所以放弃cmake，是因为莫名其妙的编码太折磨了，而且无法使用externalconsole
问题：
1. 输入缓冲区用gets解决
2. 取件码和快递员的逻辑待修改
3. 修改字符串容量，统一给20太少



v1.1
说明：
1. 解决了所有缓冲区问题
2. 拖入vs时一个个拖入，file文件夹直接复制到项目目录下
问题：
1. 取件码和快递员的逻辑待修改
2. 其他新添功能



v1.2
说明：
1. 后悔没有搞一个二维链表。每个用户、快递员下面再跟一个链表，很容易就能存储多个快递信息了
2. 之前不应该为了简便，加乱七八糟的设定，现在又得补回去。比如包裹没有收件人、平台没有链表等等。当时加容易，现在补很麻烦
3. 修复了取件码和快递员的逻辑
4. 新加链表时，别忘了补足链表初始化，以及logic.c的两个函数
4. 解决了四行输入水了小300行的问题
问题：
1. 加入新的数据和功能，丰富结构体
2. 本次工程经验不足，文件分少了。应继续落实模块化。如把输入模块拿出来等等



v1.3
说明：
修复了用户和快递员未创建临时链表的bug

v1.4
说明：
修复了无法将信息读入链表的bug，因为新加入的链表没有在函数里实现
问题：
快递员弹窗处链表无限循环



v1.5
说明：
1. 修复了内存泄露的问题
2. 修复了推送链表无限循环的bug（ai真厉害）
3. 给所有二级菜单加死循环，实现返回键功能
4. 修复取快递时无法查看取件码的bug
5. 更新取件码逻辑
6. 将货架容量改为宏定义，方便更改
7. 为平台添加了修改链表的功能
问题：
1. 内存泄露修复过度
listAdd创建的逻辑是基于void *data地址的复制
如果直接把data释放了，那基于listAdd拷贝的信息都没了
因此，只需要在最后退出文件时实现free即可，remove函数不能释放data
鉴于本项目的信息需要同步更新，我们允许浅拷贝，且浅拷贝为最优解
2. 修改包裹结构体的衍生修改：
修改data.h和.c的两个函数、修改platform的写入函数、修改user的寄件函数、修改admin的修改函数
总之 涉及其链表写入和修改的，都要回头去改
3. 补全类似上述说明第5条的修改函数（用户）
4. 补全各种错误判断、输入判断，如链表为空要给提醒
5. 寄件逻辑有问题，还是一次只能寄一个。要想改的话，估计又要加链表。。但是，基本上，每个人的货，一个快递员都能一次性运走，送到后一下子全部给提醒，勉强说得过去
6. 修改函数加while死循环
7. 补充下git回退版本方法：
    1. 回退到指定版本，丢弃指定版本后的所有更改：git log --oneline + git reset --hard 版本号
    2. 其他没试过，再说
8. 补充下导入vs的方法：新建项目后，把源码和资源文件全部拽到根目录。进入项目，从头文件和源文件添加现有项；默认路径位于根目录，因此调用资源文件时要以根目录为文件夹进行路径书写



v1.6
说明：
1. 增加了快递员新功能